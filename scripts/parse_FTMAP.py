#!/usr/bin/python3
"""
The script parses the output of FTMAP 
"""

__author__ = "Houcemeddine Othman"
__credits__ = "Wits University H3Africa/GSK ADME project"
__maintainer__ = "Houcemeddine Othman"
__email__ = "houcemoo@gmail.com"

import argparse
from scipy import stats

class parseFTMAP():
	""" 
	calculate the zcores from the distrubutin of 
	contacts with probe ligands generated by 
	FTMAP. nonbonded and hbonds are the output files 
	for the nonbonded and hbond interactions from FTMAP
	"""
	def __init__(self, nonbonded, hbonds):
		with open(nonbonded) as nb, open(hbonds) as hb: 
			self.nonbonded =  self._parseLine( nb )
			self.hbond = self._parseLine( hb )

	def wrapper(self, path, suffix):
		"""
		Wrapper method
		"""
		zscore_nb = self._percentileCalculation( self.nonbonded )
		zscore_hb = self._percentileCalculation( self.hbond )
		filename_nb = path+suffix+"_nb.csv"
		filename_hb = path+suffix+"_hb.csv"

		with open(filename_nb, "w") as nbfile:
			nbfile.writelines( "resID,chain,probe_contacts,zscore\n" ) 			
			for residue, zscore in zip(self.nonbonded, zscore_nb): 
				line = ','.join( [str(residue[0]), residue[1], str(residue[2]), str(round(zscore,2)) ] )
				nbfile.writelines( line+"\n"  )

		with open(filename_hb, "w") as hbfile:
			hbfile.writelines( "resID,chain,probe_hbonds,zscore\n" ) 			
			for residue, zscore in zip(self.hbond, zscore_hb): 
				line = ','.join( [str(residue[0]), residue[1], str(residue[2]), str(round(zscore,2)) ] )
				hbfile.writelines( line+"\n"  )

	def _percentileCalculation(self, contact_table):
		contact_list = [x[2] for x in  contact_table ]
		zscores = stats.zscore(contact_list) 
		return zscores

	def _parseLine(self, contact_table):
		clean_contacts = []
		for line in contact_table.readlines():
			aaindex = int ( line.split('\t')[0] )
			chain =  line.split('\t')[1] 
			contacts = int( line.split('\t')[3]  )
			clean_contacts.append( [aaindex, chain , contacts ] )
		clean_contacts.sort(key = lambda x: x[2])  
		return clean_contacts		

if __name__ == "__main__":
	parser = argparse.ArgumentParser(description="FTMAP parser")
	# Arguments
	parser.add_argument("--nb", help="path for non bonded interaction file")
	parser.add_argument("--hb", help="path for hbonds interaction file")
	parser.add_argument("--path", help="Path for output files, default './'")
	parser.add_argument("--suffix", help="suffix for output files, default 'ftmap_stat' ")
	args = parser.parse_args()
	assert args.nb != None, 'You must provide non bonded interaction file'
	assert args.hb != None, 'You must provide hydrogen bond interaction file'
	if args.path != None:
		path = args.path
	else: 
		path = "./"	
	if args.suffix != None:
		suffix = args.suffix
	else:
		suffix = "ftmap_stat"
	toparse = parseFTMAP(args.nb, args.hb )
	toparse.wrapper(path=path, suffix=suffix)
